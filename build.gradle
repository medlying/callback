apply plugin: 'java'
apply plugin: 'maven'

ext {
    netty = '4.1.1.Final'
    grizzly = '2.3.28'
//        jersey = '2.23.1'
    jedis = '2.8.1'
    mongo = '3.2.2'
    guava = '19.0'
    slf4j = '1.7.21'
    log4j_api = '2.8.2'
    log4j2 = '2.10.0'

    joda_time = '2.9.4'
    servlet_api = '3.0.1'
//        mybatis = '3.4.0'
//        guice = '3.0'
//        guice_bridge = '2.4.0-b34' // choose version 2.4.0-b34 is to make sure compatible with jersey:2.23.1
    guice_bridge = '2.3.0'
    jaxrs = '2.0.1'
    jackson_joda = '2.8.4'
    joda_time = '2.9.4'
    elasticsearch = '2.3.4'
    lucene = '5.5.0'
    kafka = '0.10.1.0'
    elasticsearch_earlier_version = '5.5.1'

    guice = '4.0'
    jersey = '2.25'
    httpclient = '4.5.2'

    commons_io = '1.3.2'
    commons_lang3 = '3.4'

    junit = '4.12'
    json_path = '2.2.0'
    hamcrest = '1.3'
    mockito = '1.10.19'
    bcprov = '1.58'

    soda_jersey = '0.0.26-SNAPSHOT'
    soda_guice = '0.0.26'
    mq = '0.0.3-SNAPSHOT'

    kafka = '0.10.1.0'
}

repositories {
    maven {
        url "https://nexus.sodacar.com/repository/maven-central"
        credentials {
            username = System.env.sodaMavenDev ?: sodaMavenDev
            password = System.env.sodaMavenDevPassword ?: sodaMavenDevPassword
        }
    }
    maven {
        url "https://nexus.sodacar.com/repository/maven-releases"
        credentials {
            username = System.env.sodaMavenDev ?: sodaMavenDev
            password = System.env.sodaMavenDevPassword ?: sodaMavenDevPassword
        }
    }
    maven {
        url "https://nexus.sodacar.com/repository/maven-snapshots"
        credentials {
            username = System.env.sodaMavenDev ?: sodaMavenDev
            password = System.env.sodaMavenDevPassword ?: sodaMavenDevPassword
        }
    }
}

dependencies {
    compile "joda-time:joda-time:$joda_time"
    compile "javax.servlet:javax.servlet-api:$servlet_api"
    compile "org.glassfish.jersey.media:jersey-media-multipart:$jersey"
    compile "org.glassfish.jersey.core:jersey-server:$jersey"
    compile "org.glassfish.jersey.containers:jersey-container-servlet-core:$jersey"
    compile "org.glassfish.jersey.containers:jersey-container-grizzly2-http:$jersey"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:$jersey"
    compile "org.glassfish.grizzly:grizzly-http-servlet:$grizzly"

    compile "javax.ws.rs:javax.ws.rs-api:$jaxrs"
    compile "org.glassfish.jersey.core:jersey-client:$jersey"

    compile "org.glassfish.jersey.media:jersey-media-json-jackson:$jersey"

    compile "org.apache.kafka:kafka-clients:$kafka"
    compile "com.google.guava:guava:$guava"

    compile "org.slf4j:slf4j-api:$slf4j"
    compile "org.slf4j:jcl-over-slf4j:$slf4j"
    compile "org.slf4j:slf4j-log4j12:$slf4j"

    compile "org.apache.logging.log4j:log4j-core:$log4j2"
    compile "org.apache.logging.log4j:log4j-api:$log4j2"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:$log4j2"
    compile "com.sodacar.jersey:correlation-id-filter:$soda_jersey"

    compile "com.google.inject:guice:$guice"
    compile "com.sodacar.mq:kit:$mq"

    testCompile "junit:junit:$junit"
    testCompile "org.hamcrest:hamcrest-all:$hamcrest"
    testCompile "org.mockito:mockito-all:$mockito"
}

task standaloneJar(type: Jar, dependsOn: jar) {
    baseName = "ginkgo-command-callback-mq"
    classifier = "standalone"
    version = ""

    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)

    from configurations.runtime.asFileTree.files.collect { zipTree(it) }

    exclude("META-INF/*.SF")
    exclude("META-INF/*.DSA")
    exclude("META-INF/*.RSA")
    exclude("META-INF/*.RSA")
    exclude("META-INF/*.RSA")
}

//task buildDocker(type: Docker, dependsOn: standaloneJar) {
//    project.group = 'sodacar'
//    applicationName = 'ginkgo-command-callback-mq'
//    tagVersion = '0.0.1-SNAPSHOT'
//    tag = "${registry}/${project.group}/${applicationName}"
//
//    runCommand 'apk add --update curl && rm -rf /var/cache/apk/*'
//
//    setEnvironment 'APP_HOME', '/opt/app'
//    setEnvironment 'APP_MAIN_CLASS', 'com.sodacar.ginkgo.command.callback.mq.CommandCallbackMqConnector'
//
//    runCommand 'mkdir -p /opt/app/config /opt/app/bin /opt/app/logs'
//
//    addFile "$projectDir/docker/run.sh", '/opt/app/bin/run.sh'
//    addFile "$projectDir/docker/template.sh", '/opt/app/bin/template.sh'
//
//    runCommand 'chmod +x /opt/app/bin/run.sh'
//    runCommand 'chmod +x /opt/app/bin/template.sh'
//
//    addFile "$projectDir/docker/config/", '/opt/app/config/'
//    addFile "$projectDir/docker/templates/", '/opt/app/templates/'
//    addFile "$buildDir/libs/ginkgo-command-callback-mq-standalone.jar", '/opt/app/app.jar'
//
//    workingDir "/opt/app"
//
//    entryPoint = ["/opt/app/bin/run.sh"]
//    defaultCommand = []
//}